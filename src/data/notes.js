export default {
  DEFAULT: `Hey there! Curious for more? Click on any of the technologies above for some (very) informal musings and opinions just based off my experiences.`,
  HTML: `Pretty basic! Or at least what all I know is basic. From what I know there is not a lot TO HTML, just the basic skeleton that CSS and JS build upon, but I have mainly dealt in JSX. I should perhaps do better at using appropriate tags, but outside of keeping consistency with header tags I, personally, find it more clear and sensible to simply stick with div tags and keep descriptive CSS class names or comments close by to keep the element's purpose more clear rather than trying to rely on HTML's keywords.`,
  CSS: `Oh CSS... At times as confusing as it is powerful. It becomes easier and clearer with time and I greatly appreciate much of what it can accomplish and how it works, even if little elements here and there can be confusing or infuriating, or just downright do not make sense from my perspective. (Why is it align-items and justify-content? Why not align- and justify-items or align- and justify-content?!). At times I feel like my relationship with flexbox is obsessive. There's a lot of talk about grid and I have dabbled in it some, but for the projects I have worked on it has not felt particularly valuable versus flexbox.\n\nP.S. Can not wait for the backdrop-filter property to get adopted by more browsers. Having difficulties finding a good way to implement a nice frosted look to the content holders on this site.`,
  JS: `Wow. Not sure if I know where to even start on this one or what to say. Coming from a bit of a transition from Java to JS there was a lot that was familiar and a lot that has been odd or different. Javascript has some peculiar quirks and there is a lot I still have to learn but it has been a blast and I am happy to keep finding more to it.`,
  REACT: `Love it! To put things bluntly. React has, in many ways, proven to be more than I had ever hoped for when entering web development. I enjoy the structure and flow of it and I am a pretty big fan of JSX. React, to me, feels a lot more like writing a program and, within that program, defining your UI. With Angular and other early libraries (that I know of) the theme seemed to be to play alongside HTML in a give and take. React, meanwhile, abstracts you from all of that and feels like it puts you in a position where JS is in control from the start and HTML is just a UI tool. It is a concept that is probably just entirely psychological for me but it has made working with React a much more enjoyable experience to me.`,
  REDUX: `I had a bit of a rocky start with this trying to grasp the structure of the typical connect() function and the mapping of state/dispatch but I feel like I learned a lot about how it works from those hurdles. I am rather fine and happy working with Redux, though most of the work I have done with it I feel has been rather basic. I have read complaints around here and there about it, but that is the fate of all things on the internet. Personally I am rather fond of the idea of a central state object when it proves useful.`,
  RN: `Oh boy... As far as the coding went I found React Native an interesting and fun platform to work with and not all that different from React web. My team sadly had a not-insignificant number of issues with the various development tools and the different levels of Native and Expo. I wish we could have done more to sort out some of those issues, but time was critical.\n\nI am particularly interested in diving further into React Native, both for mobile and desktop platforms, and learning more of the various dev tools and native platform specifics/interactions.`,
  SQL: `I have heard some horror stories about this stuff... Queries that span pages, HUGE lists of tables... Never having looked at massive systems, myself, a lot of it seems unfathomable. I feel like there is a lot I still frequently need to reference here and a lot I have to learn, but the numerous standards to SQL leaves me unsure if I should bother striving for TOO much in this area without a particular direction to aim in. How much good would it do learning all the details of PostgreSQL if I end up never using it on a job or project for the next ten years? I feel fairly solid in finding my way around with the general concepts and flow and that I can accomplish plenty as long as I have the docs at hand or, at worse, Stack Exchange to reference for syntax and patterns.`,
  AWS: `Admittedly not a ton of experience here, yet, mostly implementing their PostgreSQL solution to run Finite.ly's database with a touch of exploring beyond that, and access controls! An S3 bucket is planned eventually to hold some of the graphical resources for the project. The AWS certification has tempted me some, but such things are, by nature, so very specific to the platform being used and I am doubtful of how much practical knowledge I would gain if I find work at a location that does not use AWS, or if my path takes a leaning towards the frontend.`,
  NODE: `I find it oddly jarring switching from imports to require, but working with node has been an interesting and fun experience. It does not quite have the graphical satisfaction of seeing an interactable UI come together, but it has still been rather enjoyable. The work I did at Dev Mountain and with most projects lead to... fairly barebones-feeling implementations of Node. Auth. Endpoints. Authorization. Database queries. Done. My work on the Discord bot has, by comparison, felt surprisingly rewarding, though. It was the first time feeling like I am really DOING something with Node beyond supplying a middle ground between clients and the database. In the end it is a different side of the same coin as the front end; JS is JS (mostly).`,
  AUTH0: `I find their login to be more and more tacky the more I use it and have grown more and more conscious to noticing it being used on other sites. That and I think their prices are kind of absurd, at least for my level of wants from it. Personal grudges aside, though, it is what it is. I have not done much exploration into what all services it provides on their dashboard that more complex organizations may like but implementation in Node is certainly not difficult.`,
  JWT: `There are some pretty strongly felt debates online about whether Java Web Tokens provide any legitimate use beyond third party authentication and authorization, but... at least for Finite.ly they seem to have worked out rather well! They are an interesting concept and it was fun to work with them, but perhaps the argument of cookies vs JWT is still a bit out of range of my level of experience and perhaps above the scope and concerns of projects I have worked on so far. I understand a lot of the arguments against them, but for my uses those have not been concerns of mine.`,
  SIO: `Pretty fun and interesting! Personally I enjoy the syntax of the Socket.IO library over my experience with Axios, though obviously they each fill the roles they were designed for. Most of my experience with sockets has been with Finite.ly in order to ensure all of a user's clients stay in sync as perfectly as possible. How utterly annoying would it be if the alarm on your phone went quiet when you acknowledge it but your computer on the other side of the house just kept blaring on, or how terrible could it be if you set an alarm on your computer but it never went off on your phone because your phone did not refresh?!`,
  WIN: `It's... Windows! My own OS of choice, despite its evils. All of the three major players in the desktop market have their sins but I find Windows the easiest to live with. As a bonus I got my A+ and Net+ back several years ago, though it only covered up to Vista at the time and 8 and 10 have... definitely been far different of a beast. (And a depressingly more touch-oriented beast at that.)`,
  UBUNTU: `Linux... In theory it is awesome, in practice it often feels awful. I have tried it several times over the years but every time has resulted in most of my interest slowly dying off. There's a lot about it I like in theory and in practice, but sometimes it makes simple tasks far more convoluted and troublesome than it should. For a laptop with a 4K display all windows requires is for you to move a scaling slider for your external display... Ubuntu has you googling a command for the command line, creating a script file out of it, and then setting that script file to run automatically when your system starts. Most linux distros just do not really seem to try to be user friendly.`,
  VSC: `It has treated me well! So far no real complaints about it. Aside from the rule of "Never allow VSCode to 'fix' your import statements for you" (when you move a file). Terrible, terrible things have come from that. Admittedly my only other code editors I have used were vi and Netbeans back when I was using Java, though.`,
  POSTMAN: `Fairly simple and straightforward... Endpoint tests! Though a browser is arguably better for get requests, especially with the various formatting addons around that can prettify it up nicely/legibly.`,
  GITHUB: `Not as pretty as GitLab and the mascot is not as cute. Their layout is at times unintuitive to me, but even since  starting to use it their landing page for being logged in has improved dramatically in my own opinion. Time has gotten me more and more adjusted to the site as a whole. You have all the functionality there so you can not really complain too much.`,
  GIT: `So much to learn here still, I feel! But speed and comfort with the CLI grows with usage and I feel like I can navigate pretty well through all the basics. Stuff like rolling back commits might be a little more iffy, and I am still not entirely sure about topics such as when it is considered appropriate to rebase. Certainly not a master, but I can function pretty adequately as a user. (At least as far as I know)`,
  GITLAB: `Prettier than GitHub, and with a fox! You can not really argue with that! I have appreciated their layout more than GitHub's and the fact that they have free private repositories where I can be my self-conscious self and not be judged quite so hard/frequently by strangers for my inexperience as I explore different things.`,
}